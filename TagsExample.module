<?php

/**
 * Tags for Text fields â€“ Example Tag set
 *
 * Example tag set used to show how additional modules are built. Bundled with TextformatterTags.
 * 
 * @author Adam Kiss
 * @version 0.4
 * @since 2012-09-16
 * @license WTFPL <http://sam.zoy.org/wtfpl/>
 * 
 * @link http://www.adamkiss.com
 */

class TagsExample extends WireData implements Module {

  // just a 'master' shortcut
  private static $_master = 'TextformatterTags';
  private static $identificator = 'example';
  private static $functions = array(
    'time'=>'time', 'get'=>'field'
  );

  // module information
  public static function getModuleInfo() {
    return array(
      // basic information
      'title' => 'Tags Example set',
      'summary' => "Example tag set bundled with Tags for Fields module",
      'version' => 40,
      // load information
      'singular' => true,
      'autoload' => false,
      // requirements
      'requires' => self::$_master
    );
  }

  public function init() {
    // booyah not needed anything
  }

  public function ___install(){
    $tags = $this->modules->get(self::$_master);
    $data = $this->modules->getModuleConfigData(self::$_master);
    
    if (!array_key_exists(self::$identificator, $data['available_modules']))
      $data['available_modules'][self::$identificator] = get_class($this);

    if (!array_key_exists(self::$identificator, $data['available_functions']))
      $data['available_functions'][self::$identificator] = self::$functions;

    $this->modules->saveModuleConfigData(self::$_master, $data);
  }

  public function ___uninstall(){
    $tags = $this->modules->get(self::$_master);
    $data = $this->modules->getModuleConfigData(self::$_master);
    
    if (array_key_exists(self::$identificator, $data['available_modules']))
      unset($data['available_modules'][self::$identificator]);

    if (array_key_exists(self::$identificator, $data['available_functions']))
      unset($data['available_functions'][self::$identificator]);

    $this->modules->saveModuleConfigData(self::$_master, $data);
  }
  /*
    Time example function
    $params:
      format: format of the output, defaults to 'H:i:s'
  */
  public function time($params, Page $page) {
    if(isset($params) && array_key_exists('format', $params) && isset($params['format'])) {
      $format = $params['format'];
    }else{
      $format = 'H:i:s';
    }
    return date($format);
  }

  /*
    Page example function
    $params:
      field: field to extract from the page
  */
  public function field($params, Page $page) {
    return $page->get(
              is_array($params) && array_key_exists('field', $params)
            ? $params['field']
            : 'title'
          );
  }
}